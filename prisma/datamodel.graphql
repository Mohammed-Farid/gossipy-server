type User {
  id: ID! @id
  name: String!
  identifier: String @unique
  password: String!
  email: String! @unique
  memberships: [Membership!]!
    @relation(name: "UserToMembership", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Station {
  id: ID! @id
  name: String!
  identifier: String @unique
  description: String!
  public: Boolean! @default(value: false)
  members: [Membership!]!
    @relation(name: "StationToMembership", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Membership {
  id: ID! @id
  user: User! @relation(name: "UserToMembership", onDelete: SET_NULL)
  station: Station! @relation(name: "StationToMembership", onDelete: SET_NULL)
  role: Role! @default(value: MEMBER)
}

type Topic {
  id: ID! @id
  title: String!
  content: String!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Comment {
  id: ID! @id
  content: String!
}

enum Role {
  FOUNDER
  ADMIN
  MODERATOR
  MEMBER
}
