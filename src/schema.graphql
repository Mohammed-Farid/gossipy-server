type User {
  id: ID!
  name: String!
  identifier: String
  password: String!
  email: String!
  founded: [Station!]!
  createdAt: String!
  updatedAt: String!
}

type Station {
  id: ID!
  name: String!
  identifier: String
  description: String!
  public: Boolean!
  founder: User!
  createdAt: String!
  updatedAt: String!
}

type Topic {
  id: ID!
  title: String!
  content: String!
  createdAt: String!
  updatedAt: String!
}

type Comment {
  id: ID!
  content: String!
}

type Query {
  users: [User!]!
  stations: [Station!]!
  topics: [Topic!]!
  comments: [Comment!]!
}

type Mutation {
  signUp(data: CreateUserInput!): AuthPayload!
  signIn(data: LoginUserInput!): AuthPayload!
  updateUser(data: UpdateUserInput!): User!
  createStation(data: CreateStationInput!): Station!
}

type AuthPayload {
  token: String!
  user: User!
}

input CreateUserInput {
  name: String!
  email: String!
  password: String!
}

input LoginUserInput {
  email: String!
  password: String!
}

input UpdateUserInput {
  name: String
  email: String
  password: String
}

input CreateStationInput {
  name: String!
  description: String!
  public: Boolean!
}
