type User {
  id: ID!
  name: String!
  identifier: String
  password: String!
  email: String!
  memberships: [Membership!]!
  createdAt: String!
  updatedAt: String!
}

type Station {
  id: ID!
  name: String!
  identifier: String
  description: String!
  public: Boolean!
  members: [Membership!]!
  createdAt: String!
  updatedAt: String!
}

type Membership {
  id: ID!
  user: User!
  station: Station!
  role: Role!
  topics: [Topic!]!
  comments: [Comment!]!
  state: MembershipState!
  createdAt: String!
  updatedAt: String!
}

type Topic {
  id: ID!
  title: String!
  content: String!
  membership: Membership!
  comments: [Comment!]!
  createdAt: String!
  updatedAt: String!
}

type Comment {
  id: ID!
  content: String!
  membership: Membership!
  topic: Topic!
  createdAt: String!
  updatedAt: String!
}

type Query {
  users: [User!]!
  stations: [Station!]!
  memberships: [Membership!]!
  topics: [Topic!]!
  comments: [Comment!]!
}

type DeleteMembership {
  membership: Membership!
  user: User!
  station: Station!
}

type Mutation {
  signUp(data: CreateUserInput!): AuthPayload!
  signIn(data: LoginUserInput!): AuthPayload!
  updateUser(data: UpdateUserInput!): User!
  createStation(data: CreateStationInput!): Station!
  updateStation(id: String!, data: UpdateStationInput!): Station!
  deleteStation(id: String!): Station!
  createMembership(stationId: String!): Membership!
  updateMembership(id: String!, data: MembershipUpdateInput): Membership!
  unsubscribeMembership(id: String!): Membership!
  deleteMembership(id: String!): DeleteMembership!
  createTopic(data: CreateTopicInput!): Topic!
  updateTopic(id: String!, data: UpdateTopicInput): Topic!
  deleteTopic(id: String!): Topic!
  createComment(data: CreateCommentInput!): Comment!
}

type AuthPayload {
  token: String!
  user: User!
}

input CreateUserInput {
  name: String!
  email: String!
  password: String!
}

input LoginUserInput {
  email: String!
  password: String!
}

input UpdateUserInput {
  email: String
  password: String
}

input CreateStationInput {
  name: String!
  description: String!
  public: Boolean!
}

input UpdateStationInput {
  description: String
  public: Boolean
}

input MembershipUpdateInput {
  role: Role
  state: MembershipState
}

input CreateTopicInput {
  title: String!
  content: String!
  membership: String!
}

input UpdateTopicInput {
  title: String
  content: String
}

input CreateCommentInput {
  content: String!
  topic: String!
  membership: String!
}

enum Role {
  FOUNDER
  ADMIN
  MODERATOR
  MEMBER
}

enum MembershipState {
  PENDING
  ACTIVE
  DETACHED
  BANNED
}
